name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: "0 */6 * * *" # every 6 hours (adjust as needed)
  workflow_dispatch: # allow manual trigger

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Auto-format across all packages (Prettier)
        run: pnpm -r exec prettier --write .
      - name: Check formatting
        run: pnpm format:check
      - name: Lint code
        run: pnpm lint
      - name: Check dependency versions
        run: pnpm syncpack:check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Build all packages
        run: pnpm build

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Type check
        run: pnpm run type-check

  claim-partner-fees:
    name: Claim Partner Fees
    runs-on: ubuntu-latest
    needs: [lint-and-format, build, type-check]
    if: github.event_name == 'schedule' || (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # Decode Phantom base58 (32/64) â†’ keypair.json
      - name: Decode PK_B58 to full keypair.json
        run: |
          npx -y -p @solana/web3.js@1.98.2 -p bs58@4 node -e "
            const fs = require('fs');
            const b = require('bs58');
            const { Keypair } = require('@solana/web3.js');

            const s = (process.env.PK_B58 || process.env.PRIVATE_KEY_B58 || '').trim();
            if (!s) throw new Error('Missing PK_B58 or PRIVATE_KEY_B58');

            const decode = (b && b.decode) ? b.decode : (b.default && b.default.decode);
            if (typeof decode !== 'function') throw new Error('bs58.decode not available');

            const secret = decode(s);
            if (secret.length !== 32 && secret.length !== 64) {
              throw new Error('Decoded key length is ' + secret.length + ' bytes; expected 32 or 64');
            }

            const kp = Keypair.fromSecretKey(secret);
            fs.writeFileSync('keypair.json', JSON.stringify(Array.from(kp.secretKey)));
            console.log('Public key:', kp.publicKey.toBase58());
          "
        env:
          PK_B58: ${{ secrets.PK_B58 }}
          PRIVATE_KEY_B58: ${{ secrets.PRIVATE_KEY_B58 }}

      # Preflight: fail clearly if required env vars are missing
      - name: Preflight env check
        run: |
          for v in RPC_URL DBC_OWNER FEE_CLAIMER; do
            if [ -z "${!v}" ]; then
              echo "::error::Missing required env var: $v"
              exit 1
            fi
          done
        env:
          RPC_URL: ${{ secrets.RPC_URL }}
          DBC_OWNER: ${{ secrets.DBC_OWNER }}
          FEE_CLAIMER: ${{ secrets.FEE_CLAIMER }}

      # Auto-discovery claim (no BASE_MINTS, no --config)
      - name: Claim ALL partner fees
        run: pnpm studio:dbc-claim-all-fees-auto
        env:
          RPC_URL: ${{ secrets.RPC_URL }}
          DBC_OWNER: ${{ secrets.DBC_OWNER }}
          FEE_CLAIMER: ${{ secrets.FEE_CLAIMER }}

      - name: Clean up keypair.json
        run: rm -f keypair.json
